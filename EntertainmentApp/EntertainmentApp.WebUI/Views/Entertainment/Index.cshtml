@model IEnumerable<EntertainmentApp.Domain.Entities.Entertainment>

@{
    ViewData["Title"] = "Entertainment List";
    var genres = Model.Select(e => e.Genre.Name).Distinct().ToList();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EntertainmentApp.WebUI</title>
    <style>
        .card {
            position: relative;
        }

        .card-img-wrapper {
            position: relative;
            height: 250px; /* Set a consistent height for the image wrapper */
        }

        .card-img-top {
            width: 100%;
            height: 100%; /* Ensure the image takes up the full height of the wrapper */
            object-fit: contain; /* Contain the image within the area without cropping */
            transition: opacity 0.5s ease;
        }

        .card-description {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            justify-content: center;
            align-items: flex-start; /* Align items to the top */
            background-color: rgba(0, 0, 0, 0.6);
            color: white;
            opacity: 0;
            transition: opacity 0.5s ease;
            text-align: center;
            padding: 10px;
            overflow-y: auto; /* Enable vertical scrolling */
        }

        .card-img-wrapper:hover .card-img-top {
            opacity: 0.3;
        }

        .card-img-wrapper:hover .card-description {
            opacity: 1;
        }

        .text-light-big {
            font-size: 1.25rem;
        }

        .text-light:hover, .text-light-big:hover {
            color: blue;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand text-light text-light-big" asp-area="" asp-controller="Home" asp-action="Index">EntertainmentApp</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-light text-light-big" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-light text-light-big" asp-area="" asp-controller="Entertainment" asp-action="Index">Catalog</a>
                        </li>
                        @if (User.HasClaim("CanManageCatalog", "true"))
                        {
                                <li class="nav-item">
                                    <a class="nav-link text-light text-light-big" asp-area="" asp-controller="Entertainment" asp-action="Create">Create Entertainment</a>
                                </li>
                        }
                    </ul>
                </div>
                <partial name="_LoginPartial" />
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            <h1>Entertainment List</h1>

            <div class="mb-3">
                <label for="genreFilter" class="form-label">Filter by Genre:</label>
                <select id="genreFilter" class="form-select" onchange="filterByGenre()">
                    <option value="">All Genres</option>
                    @foreach (var genre in genres)
                    {
                            <option value="@genre">@genre</option>
                    }
                </select>
            </div>

            <div class="row" id="entertainmentList">
                @foreach (var entertainment in Model)
                {
                        <div class="col-md-4 mb-3 entertainment-item" data-genre="@entertainment.Genre.Name">
                            <div class="card h-100">
                                <div class="card-img-wrapper">
                                    <img src="@Url.Content(entertainment.ImageURL)" class="card-img-top" alt="@entertainment.Title" />
                                    <div class="card-description">
                                        <p>@entertainment.Description</p>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">@entertainment.Title</h5>
                                    <p class="card-text"><strong>@entertainment.Genre.Name</strong></p>
                                    <p class="card-text">@entertainment.ReleaseDate.ToString("yyyy-MM-dd")</p>
                                    <a asp-action="Detail" asp-controller="Entertainment" asp-route-id="@entertainment.Id" class="btn btn-primary">Details</a>
                                </div>
                            </div>
                        </div>
                }
            </div>

            @if (User.HasClaim(c => c.Type == "CanManageCatalog" && c.Value == "true"))
            {
                    <a asp-action="Create" class="btn btn-success">Add New Entertainment</a>
            }
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - EntertainmentApp.WebUI - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script>
        function filterByGenre() {
            var selectedGenre = document.getElementById('genreFilter').value.toLowerCase();
            var items = document.getElementsByClassName('entertainment-item');

            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                var itemGenre = item.getAttribute('data-genre').toLowerCase();

                if (selectedGenre === "" || itemGenre === selectedGenre) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            }
        }
    </script>
</body>
</html>
